--- a/hidparser/hidparser.c
+++ b/hidparser/hidparser.c
@@ -24,6 +24,7 @@
 
 #include "config.h"
 #include <string.h>
+#include <stdio.h>
 #include "hidparser.h"
 
 /* to be implemented for DEBUG purpose */
@@ -343,10 +344,29 @@ int FindObject(HIDParser* pParser, HIDData* pData)
 {
   HIDData FoundData;
   ResetParser(pParser);
+  
+  printf("debug\n");
+  
   while(HIDParse(pParser, &FoundData))
   {
+
+	  if (pData->Path.Size>0){
+		  printf("FoundData0 0x%08x \n", (FoundData.Path.Node[0].UPage << 16)
+			  | FoundData.Path.Node[0].Usage);
+		  printf("pData0     0x%08x \n", (pData->Path.Node[0].UPage << 16)
+			  | pData->Path.Node[0].Usage);
+	  }
+	  if (pData->Path.Size>1){
+		  printf("FoundData1 0x%08x \n", (FoundData.Path.Node[1].UPage << 16)
+			  | FoundData.Path.Node[1].Usage);
+		  printf("pData1     0x%08x \n", (pData->Path.Node[1].UPage << 16)
+			  | pData->Path.Node[1].Usage);
+	  }
+	  printf("FoundData type: 0x%02x\n", FoundData.Type);
+	  printf("pData     type: 0x%02x\n", pData->Type);
+	  
     if(pData->Path.Size>0 && 
-      FoundData.Type==pData->Type &&
+      /*FoundData.Type==pData->Type &&*/
       memcmp(FoundData.Path.Node, pData->Path.Node, (pData->Path.Size)*sizeof(HIDNode))==0)
     {
       memcpy(pData, &FoundData, sizeof(HIDData));
